def caesar_cipher(text, shift, mode='encrypt'):
    """
    Encrypts or decrypts a message using the Caesar Cipher algorithm.
    
    Args:
    - text (str): The message to be encrypted or decrypted.
    - shift (int): The number of positions to shift the alphabet.
    - mode (str): 'encrypt' to encrypt, 'decrypt' to decrypt. Default is 'encrypt'.
    
    Returns:
    - str: The encrypted or decrypted message.
    """
    result = ""
    shift = shift % 26  # Ensure the shift is within the alphabet range

    # Adjust shift for decryption
    if mode == 'decrypt':
        shift = -shift

    for char in text:
        if char.isalpha():
            # Determine if the character is uppercase or lowercase
            offset = ord('A') if char.isupper() else ord('a')
            # Shift character and wrap around the alphabet
            shifted = chr((ord(char) - offset + shift) % 26 + offset)
            result += shifted
        else:
            result += char  # Non-alphabetic characters remain unchanged

    return result

# User interaction
def main():
    print("Caesar Cipher Program")
    mode = input("Would you like to encrypt or decrypt? ").strip().lower()
    if mode not in ['encrypt', 'decrypt']:
        print("Invalid mode. Please choose 'encrypt' or 'decrypt'.")
        return
    
    text = input("Enter the message: ")
    try:
        shift = int(input("Enter the shift value: "))
    except ValueError:
        print("Invalid shift value. Please enter an integer.")
        return
    
    result = caesar_cipher(text, shift, mode)
    print(f"The resulting message is: {result}")

if __name__ == "__main__":
    main()
